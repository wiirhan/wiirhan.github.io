<div class="ring-container">
  <div class="ring">
    <img src="https://picsum.photos/id/31/400/600" alt="" />
    <img src="https://picsum.photos/id/32/400/600" alt="" />
    <img src="https://picsum.photos/id/33/400/600" alt="" />
    <img src="https://picsum.photos/id/34/400/600" alt="" />
    <img src="https://picsum.photos/id/35/400/600" alt="" />
    <img src="https://picsum.photos/id/36/400/600" alt="" />
    <img src="https://picsum.photos/id/37/400/600" alt="" />
    <img src="https://picsum.photos/id/38/400/600" alt="" />
    <img src="https://picsum.photos/id/39/400/600" alt="" />
    <img src="https://picsum.photos/id/40/400/600" alt="" />
  </div>
</div>

<style lang="scss">
  @use "sass:math";

  .ring-container {
    background-color: #000;
    perspective: 2000px;
    cursor: grab;
    user-select: none;
    overflow: hidden;
  }

  .ring {
    width: 100vw;
    height: 100vh;
    transform-style: preserve-3d;
    box-shadow: unset;
    transition: transform 0.1s;

    img {
      position: absolute;
      $imgWidth: 300px;
      $imgHeight: 400px;
      width: $imgWidth;
      height: $imgHeight;
      top: 50%;
      left: 50%;
      margin-left: calc(-1 * $imgWidth / 2);
      margin-top: calc(-1 * $imgHeight / 2);

      $n: 10;
      $r: 500px;
      $pDeg: calc(360deg / $n);
      backface-visibility: hidden;
      opacity: 0.5;
      transition: opacity 0.2s;

      &:hover {
        opacity: 1;
      }

      @for $i from 1 through $n {
        &:nth-child(#{$i}) {
          $d: $i * $pDeg;
          $x: $r * math.sin($d);
          $z: $r * math.cos($d);
          transform: translate3d($x, 0, $z) rotateY(180deg + $d);
        }
      }
    }
  }
</style>

<script>
  const ring = document.querySelector(".ring") as HTMLElement;
  let isDragging = false;
  let startX = 0;
  let currentRotation = 0;
  let previousRotation = 0;

  ring.addEventListener("mousedown", (e) => {
    e.preventDefault();
    isDragging = true;
    startX = e.clientX;
    ring.style.cursor = "grabbing";
  });

  document.addEventListener("mousemove", (e) => {
    if (!isDragging) return;

    const deltaX = e.clientX - startX;
    currentRotation = previousRotation - deltaX * 0.5;
    ring.style.transform = `rotateY(${currentRotation}deg)`;
  });

  document.addEventListener("mouseup", () => {
    isDragging = false;
    previousRotation = currentRotation;
    ring.style.cursor = "grab";
  });
</script>
